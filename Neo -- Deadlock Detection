#include<stdio.h>

int safety(int allocation[][10],int request[][10],int avilable[],int n,int m)
{
	int work[m],finish[n],i,j,flag;
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++)
		  if(allocation[i][j]>0)
		     break;
		if(j<m)
		   finish[i]=0;
		else
		   finish[i]=1;
	}
	for(i=0;i<m;i++)
	    work[i]=avilable[i];
	do
	{
	 flag=0;    
	 i=0;
	while(i<n)
	{
	   if(finish[i]==0)
	   {
	   	for(j=0;j<m;j++)
	   	  if(work[j]<request[i][j])
	   	     break;
	   	if(j==m)
	   	 {
	   		for(j=0;j<m;j++)
	   		   work[j]+=allocation[i][j];
	   		finish[i]=1;
	   	//	printf("Process %d is completed\n",i);
	   		flag=1;
	   		i=n;
	      } 
	      
		}
		i=i+1;
			
	}
}while(flag);
for(i=0;i<n;i++)
	if(finish[i]==0)
	  return 0;
	  
return 1;
}

int main()
{
	int i,j,k,n,m,allocation[10][10], request[10][10], avilable[10];
//	printf("Enter the values of n and m");
	scanf("%d%d",&n,&m);
//printf("Enter Allocation Matrix");
	for(i=0;i<n;i++)
	   for(j=0;j<m;j++)
	      scanf("%d",&allocation[i][j]);
//	printf("Enter the request matrix");
	for(i=0;i<n;i++)
	   for(j=0;j<m;j++)
	      scanf("%d",&request[i][j]);
//	printf("Enter The avilable vector:");
	for(i=0;i<m;i++)
	  scanf("%d", &avilable[i]);
	  
		  	  
	i=safety(allocation,request,avilable,n,m);
	if(i==1)
	   printf("1\n");
	else
	   printf("0\n");
	   
	
	return 0;
	 }
